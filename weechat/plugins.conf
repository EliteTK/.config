#
# weechat -- plugins.conf
#

[var]
fifo.fifo = "on"
guile.check_license = "off"
lua.check_license = "off"
perl.check_license = "off"
perl.colorize_lines.blacklist_buffers = ""
perl.colorize_lines.buffers = "all"
perl.colorize_lines.highlight = "on"
perl.colorize_lines.lines = "on"
perl.colorize_lines.nicks = ""
perl.colorize_lines.own_lines = "on"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "off"
perl.highmon.color_buf = "on"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "off"
perl.highmon.merge_private = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.short_names = "off"
perl.isgd.auto = "on"
perl.isgd.auto_min_length = "20"
perl.isgd.color = "white"
perl.newsbar.away_only = "off"
perl.newsbar.bar_auto_hide = "on"
perl.newsbar.bar_hidden_on_start = "1"
perl.newsbar.bar_name = "newsbar"
perl.newsbar.bar_seperator = "off"
perl.newsbar.bar_title = "Highlights"
perl.newsbar.bar_visible_lines = "4"
perl.newsbar.beep_cmd = "beep -f %F -l %L"
perl.newsbar.beep_duration = "20"
perl.newsbar.beep_freq_channel = "1000"
perl.newsbar.beep_freq_msg = "1000"
perl.newsbar.beep_freq_private = "1000"
perl.newsbar.beep_remote = "off"
perl.newsbar.beeps = "off"
perl.newsbar.color_info_msg_tag = "cyan"
perl.newsbar.color_privmsg_tag = "red"
perl.newsbar.color_server_msg_tag = "magenta"
perl.newsbar.color_status_name = "white"
perl.newsbar.color_status_number = "yellow"
perl.newsbar.colored_help = "on"
perl.newsbar.debug = "on"
perl.newsbar.format_private = "%N@%s"
perl.newsbar.format_public = "%N.%C@%s"
perl.newsbar.memo_tag_color = "yellow"
perl.newsbar.most_recent = "first"
perl.newsbar.nick_flood_max_nicks = "4"
perl.newsbar.nick_flood_protection = "off"
perl.newsbar.remove_bar_on_unload = "on"
perl.newsbar.show_highlights = "on"
perl.newsbar.show_priv_msg = "on"
perl.newsbar.show_priv_server_msg = "on"
perl.newsbar.ssh_host = ""
perl.newsbar.ssh_key = ""
perl.stalker.additional_join_info = "off"
perl.stalker.db_name = "%h/nicks.db"
perl.stalker.debug = "off"
perl.stalker.flood_max_nicks = "20"
perl.stalker.flood_timer = "10"
perl.stalker.guest_host_regex = "^webchat"
perl.stalker.guest_nick_regex = "^(guest|weebot|Floodbot|ChanServ).*"
perl.stalker.ignore_guest_hosts = "off"
perl.stalker.ignore_guest_nicks = "on"
perl.stalker.ignore_nickchange = "off"
perl.stalker.ignore_whois = "off"
perl.stalker.max_recursion = "20"
perl.stalker.normalize_nicks = "on"
perl.stalker.recursive_search = "on"
perl.stalker.search_this_network_only = "on"
perl.stalker.tags = ""
perl.stalker.timeout = "1"
perl.stalker.use_localvar = "off"
python.anotify.icon = "/usr/share/pixmaps/weechat.xpm"
python.anotify.show_channel_topic = "on"
python.anotify.show_dcc = "on"
python.anotify.show_highlighted_message = "on"
python.anotify.show_invite_message = "on"
python.anotify.show_notice_message = "off"
python.anotify.show_private_action_message = "on"
python.anotify.show_private_message = "on"
python.anotify.show_public_action_message = "off"
python.anotify.show_public_message = "off"
python.anotify.show_server = "on"
python.anotify.show_upgrade_ended = "on"
python.anotify.sticky = "off"
python.anotify.sticky_away = "on"
python.chanop.autodeop = "on"
python.chanop.autodeop_delay = "180"
python.chanop.default_banmask = "host"
python.chanop.display_affected = "on"
python.chanop.enable_bar = "on"
python.chanop.enable_multi_kick = "off"
python.chanop.enable_remove = "off"
python.chanop.kick_reason = ""
python.chanop.op_command = "/msg chanserv op $channel $nick"
python.chanop.watchlist.demizeznc = "##archlinux-botabuse,#archlinux-botabuse,#ircpuzzles-sekrit"
python.check_license = "off"
python.hlpvitem.buffer_number = "on"
python.hlpvitem.buffer_short_name = "on"
python.hlpvitem.color_buffer_name = "default"
python.hlpvitem.color_buffer_number = ""
python.hlpvitem.color_delimiter = "cyan"
python.hlpvitem.color_message = "default"
python.hlpvitem.color_prefix = "white"
python.hlpvitem.color_string_highlight = ""
python.hlpvitem.color_string_private = ""
python.hlpvitem.highlight = "on"
python.hlpvitem.private = "on"
python.hlpvitem.show_all_buffers = "off"
python.hlpvitem.string_delimiter = " > "
python.hlpvitem.string_highlight = ""
python.hlpvitem.string_private = ""
python.hlpvitem.visible_seconds = "7"
python.screen_away.away_suffix = ""
python.screen_away.command_on_attach = ""
python.screen_away.command_on_detach = ""
python.screen_away.ignore = ""
python.screen_away.ignore_relays = "off"
python.screen_away.interval = "5"
python.screen_away.message = "Detatched from tmux."
python.screen_away.set_away = "on"
python.screen_away.time_format = "since %Y-%m-%d %H:%M:%S%z"
python.shortenurl.bitly_add_to_history = "true"
python.shortenurl.bitly_key = ""
python.shortenurl.bitly_login = ""
python.shortenurl.color = "red"
python.shortenurl.ignore_list = "= http://is.gd,http://tinyurl.com,http://bit.ly,http://youtu.be"
python.shortenurl.short_own = "off"
python.shortenurl.shortener = "isgd"
python.shortenurl.urllength = "30"
python.spell_correction.auto_pop_up_item = "on"
python.spell_correction.auto_replace = "on"
python.spell_correction.catch_input_completion = "on"
python.spell_correction.complete_near = "0"
python.spell_correction.eat_input_char = "on"
python.spell_correction.hide_single_dict = "on"
python.spell_correction.replace_mode = "off"
python.spell_correction.suggest_item = "${white}%S${default}"
python.urlserver.buffer_short_name = "off"
python.urlserver.color = "darkgray"
python.urlserver.color_in_msg = ""
python.urlserver.debug = "off"
python.urlserver.display_urls = "on"
python.urlserver.display_urls_in_msg = "off"
python.urlserver.http_allowed_ips = ""
python.urlserver.http_auth = ""
python.urlserver.http_autostart = "on"
python.urlserver.http_bg_color = "#f4f4f4"
python.urlserver.http_css_url = ""
python.urlserver.http_embed_image = "off"
python.urlserver.http_embed_youtube = "off"
python.urlserver.http_embed_youtube_size = "480*350"
python.urlserver.http_fg_color = "#000"
python.urlserver.http_hostname = ""
python.urlserver.http_hostname_display = ""
python.urlserver.http_port = ""
python.urlserver.http_port_display = ""
python.urlserver.http_prefix_suffix = " "
python.urlserver.http_scheme_display = "http"
python.urlserver.http_time_format = "%d/%m/%y %H:%M:%S"
python.urlserver.http_title = "WeeChat URLs"
python.urlserver.http_url_prefix = ""
python.urlserver.msg_ignore_buffers = "core.weechat,python.grep"
python.urlserver.msg_ignore_dup_urls = "off"
python.urlserver.msg_ignore_regex = ""
python.urlserver.msg_ignore_tags = "irc_quit,irc_part,notify_none"
python.urlserver.msg_require_tags = "nick_"
python.urlserver.separators = "[|]"
python.urlserver.url_min_length = "0"
python.urlserver.urls_amount = "100"
ruby.check_license = "off"
tcl.check_license = "off"

[desc]
perl.colorize_lines.blacklist_buffers = "comma-separated list of channels to be ignored (e.g. freenode.#weechat,*.#python)"
perl.colorize_lines.buffers = "buffer type affected by the script (all/channel/query, default: all)"
perl.colorize_lines.highlight = "apply highlight color to the highlighted lines (off/on/nicks). the latter will limit highlighting to nicknames in option 'nicks'"
perl.colorize_lines.lines = "apply nickname color to the lines (off/on/nicks). the latter will limit highlighting to nicknames in option 'nicks'"
perl.colorize_lines.nicks = "comma-separater list of nicks (e.g. freenode.cat,*.dog) OR file name starting with '/' (e.g. /file.txt). in the latter case, nicknames will get loaded from that file inside weechat folder (e.g. from ~/.weechat/file.txt). nicknames in file are newline-separated (e.g. freenode.dog\n*.cat)"
perl.colorize_lines.own_lines = "apply nickname color to own lines (off/on/only). the latter turns off all other kinds of coloring altogether"
perl.isgd.auto = "Shorten all incoming URLs automatically (default: "off")"
perl.isgd.auto_min_length = "Only shorten incoming URLs automatically which have this minimum length (default: "1")"
perl.isgd.color = "Color used for printing shortened URLs (default: "white")"
perl.stalker.additional_join_info = "add a line below the JOIN message that will display alternative nicks (tags: "irc_join", "irc_smart_filter" will be add to additional_join_info). You can use a localvar to drop additional join info for specific buffer(s) "stalker_drop_additional_join_info" (default: off)"
perl.stalker.db_name = "file containing the SQLite database where information is recorded. This database is created on loading of stalker if it does not exist. ("%h" will be replaced by WeeChat home, "~/.weechat" by default) (default: %h/nicks.db)"
perl.stalker.debug = "Prints debug output to core buffer so you know exactly what is going on. This is far too verbose to be enabled when not actively debugging something. (default: off)"
perl.stalker.flood_max_nicks = "Maximum number of joins to allow in flood_timer length of time. Once maximum number of joins is reached, joins will be ignored until the timer ends (default:20)"
perl.stalker.flood_timer = "Time in seconds for which flood protection is active. Once max_nicks is reached, joins will be ignored for the remaining duration of the timer. (default:10)"
perl.stalker.guest_host_regex = "regex mask to ignore host masks"
perl.stalker.guest_nick_regex = "Some networks set default nicknames when a user fails to identify to nickserv, other networks using relay-bots, some irc clients set default nicknames when someone connects and often these change from network to network depending on who is configuring the java irc clients. This allows a regular expression to be entered. When a nickname matches the regular expression and "ignore_guest_nicks" is enabled the nickname is dropped from the search as if it had never been seen. (default: ^(guest|weebot|Floodbot).*)"
perl.stalker.ignore_guest_hosts = "See option guest_host_regex"
perl.stalker.ignore_guest_nicks = "See option guest_nick_regex"
perl.stalker.ignore_nickchange = "When enabled, /NICK changes won't be monitored. (default: off)"
perl.stalker.ignore_whois = "When enabled, /WHOIS won't be monitored. (default: off)"
perl.stalker.max_recursion = "For each correlation between nick <-> host that happens, one point of recursion happens. A corrupt database, general evilness, or misfortune can cause the recursion to skyrocket. This is a ceiling number that says if after this many correlation attempts we have not found all nickname and hostname correlations, stop the process and return the list to this point. Use this option with care on slower machines like raspberry pi."
perl.stalker.normalize_nicks = "this option will truncate special chars from username (like: ~) (default: on)"
perl.stalker.recursive_search = "When enabled, recursive search causes stalker to function better than a simple hostname to nickname map. Disabling the recursive search in effect turns stalker into a more standard hostname -> nickname map."
perl.stalker.search_this_network_only = "When enabled searches are limited to within the network the window is currently set on. Turning this off is really only useful if multiple networks don't encode the hostmask. (default: on)"
perl.stalker.tags = "comma separated list of tags used for messages printed by stalker. See documentation for possible tags (e.g. 'no_log', 'no_highlight'). This option does not effect DEBUG messages."
perl.stalker.timeout = "timeout in seconds for hook_process(), used with option "additional_join_info". On slower machines, like raspberry pi, increase time. (default: 1)"
perl.stalker.use_localvar = "When enabled, only channels with a localvar 'stalker' will be monitored. This option will not affect /NICK and /WHOIS monitoring. It's only for /JOIN messages. (default: off)"
python.screen_away.away_suffix = "What to append to your nick when you're away."
python.screen_away.command_on_attach = "Commands to execute on attach, separated by semicolon"
python.screen_away.command_on_detach = "Commands to execute on detach, separated by semicolon"
python.screen_away.ignore = "Comma-separated list of servers to ignore."
python.screen_away.ignore_relays = "Only check screen status and ignore relay interfaces"
python.screen_away.interval = "How often in seconds to check screen status"
python.screen_away.message = "Away message"
python.screen_away.set_away = "Set user as away."
python.screen_away.time_format = "time format append to away message"
python.spell_correction.auto_pop_up_item = "automatic pop-up suggestion item on a misspelled word (default: "off")"
python.spell_correction.auto_replace = "replaces misspelled word with selected suggestion, automatically. If you use "off" you will have to bind command "/spell_correction replace" to a key (default: "on")"
python.spell_correction.catch_input_completion = "will catch the input_complete commands [TAB-key] (default: "on")"
python.spell_correction.complete_near = "show suggestions item only if you are n-chars near the misspelled word (0 = off). Using 'replace_mode' cursor has to be n-chars near misspelled word to cycle through suggestions. (default: "0")"
python.spell_correction.eat_input_char = "will eat the next char you type, after replacing a misspelled word (default: "on")"
python.spell_correction.hide_single_dict = "will hide dict in item if you have a single dict for buffer only (default: "on")"
python.spell_correction.replace_mode = "misspelled word will be replaced directly by suggestions. Use option 'complete_near' to specify range and item 'spell_suggest' to show possible suggestions. (default: "off")"
python.spell_correction.suggest_item = "item format (%S = suggestion, %D = dict). Colors are allowed with format "${color}". note: since WeeChat 0.4.2 content is evaluated, see /help eval. (default: "${white}%S${default}")"
python.urlserver.buffer_short_name = "use buffer short name on dedicated buffer (default: "off")"
python.urlserver.color = "color for urls displayed after message (default: "darkgray")"
python.urlserver.color_in_msg = "color for urls displayed inside irc message: it is a number (irc color) between 00 and 15 (see doc for a list of irc colors) (default: "")"
python.urlserver.debug = "print some debug messages (default: "off")"
python.urlserver.display_urls = "display URLs below messages (default: "on")"
python.urlserver.display_urls_in_msg = "add shorten url next to the original url (only in IRC messages) (useful for urlserver behind relay/irc) (default: "off")"
python.urlserver.http_allowed_ips = "regex for IPs allowed to use server (example: "^(123.45.67.89|192.160.*)$") (default: "")"
python.urlserver.http_auth = "login and password (format: "login:password") required to access to page with list of URLs (default: "")"
python.urlserver.http_autostart = "start the built-in HTTP server automatically) (default: "on")"
python.urlserver.http_bg_color = "background color for HTML page (default: "#f4f4f4")"
python.urlserver.http_css_url = "URL of external Cascading Style Sheet to add (BE CAREFUL: the HTTP referer will be sent to site hosting CSS file!) (empty value = use default embedded CSS) (default: "")"
python.urlserver.http_embed_image = "embed images in HTML page (BE CAREFUL: the HTTP referer will be sent to site hosting image!) (default: "off")"
python.urlserver.http_embed_youtube = "embed youtube videos in HTML page (BE CAREFUL: the HTTP referer will be sent to youtube!) (default: "off")"
python.urlserver.http_embed_youtube_size = "size for embedded youtube video, format is "xxx*yyy" (default: "480*350")"
python.urlserver.http_fg_color = "foreground color for HTML page (default: "#000")"
python.urlserver.http_hostname = "force hostname/IP in bind of socket (empty value = auto-detect current hostname) (default: "")"
python.urlserver.http_hostname_display = "display this hostname in shortened URLs (default: "")"
python.urlserver.http_port = "force port for listening (empty value = find a random free port) (default: "")"
python.urlserver.http_port_display = "display this port in shortened URLs. Useful if you forward a different external port to the internal port (default: "")"
python.urlserver.http_prefix_suffix = "suffix displayed between prefix and message in HTML page (default: " ")"
python.urlserver.http_scheme_display = "display this scheme in shortened URLs (default: "http")"
python.urlserver.http_time_format = "time format in the HTML page (default: "%d/%m/%y %H:%M:%S")"
python.urlserver.http_title = "title of the HTML page (default: "WeeChat URLs")"
python.urlserver.http_url_prefix = "prefix to add in URLs to prevent external people to scan your URLs (for example: prefix "xx" will give URL: http://host.com:1234/xx/8) (default: "")"
python.urlserver.msg_ignore_buffers = "comma-separated list (without spaces) of buffers to ignore (full name like "irc.freenode.#weechat") (default: "core.weechat,python.grep")"
python.urlserver.msg_ignore_dup_urls = "ignore duplicated URLs (do not add an URL in list if it is already) (default: "off")"
python.urlserver.msg_ignore_regex = "ignore messages matching this regex (default: "")"
python.urlserver.msg_ignore_tags = "comma-separated list (without spaces) of tags (or beginning of tags) to ignore (for example, use "notify_none" to ignore self messages or "nick_weebot" to ignore messages from nick "weebot") (default: "irc_quit,irc_part,notify_none")"
python.urlserver.msg_require_tags = "comma-separated list (without spaces) of tags (or beginning of tags) required to shorten URLs (for example "nick_" to shorten URLs only in messages from other users) (default: "nick_")"
python.urlserver.separators = "separators for short url list (string with exactly 3 chars) (default: "[|]")"
python.urlserver.url_min_length = "minimum length for an URL to be shortened (0 = shorten all URLs, -1 = detect length based on shorten URL) (default: "0")"
python.urlserver.urls_amount = "number of URLs to keep in memory (and in file when script is not loaded) (default: "100")"
